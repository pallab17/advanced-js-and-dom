
// if we take this fn as a example 
document.addEventListener("keydown",function(event) {
                           makeAwaj(event.key);
             }) ;

// ekhane addEventListener acts a higher order fn 
// aar function(event) acts as a callback fn
// eibar bepar ta hocche amra kintu callback fn take call korina
// je object/element/mal ta event or click take experience korche se call korche callback fn take
// eita howar por amra event r bepare kichu information pai 
// like drumkit project taye kon key pressed hoyeche ebong kotokhun press hoyeche tar sathe baki information gulo pai amra


// ebar ekta event listener jokhun ekta event hoye 
// tarpor ekta object create kore jetar modhe event details thake
// programmer chaile ei object/event r info ta request kore dekhte pare using callback method/fn
// eibar callback fn to sobsomoye call hoyena sob event r jonno 
// tai eventlistener check kore
// je jodi je user je event ta khujche === sei event tai ki ghoteche ( eg keypress in our project)
// taholei callback fn ke trigger korbe tarmane taholei callback fn ke use kore as a dalal/broker event information send korbe.



//document.addEventListener("keydown",function(event) {
                           console.log(event);
             }) ;
             
    // ebar jodi  ami keyboard e p press kori tahole
    // event listener ekta object create korbe about the event(pressing p in the keyboard is the event)
    // tarpor check korche je ami ki event chaichi aar ki event ghoteche 
    //  keydown event ( mane key pressig event ) 
    //  jehetu keydown event ghoteche plus ebong ami cheyeochi je jodi keyboard press hoye then amake object r info diyo
    // tai eventlistner event r object jeta create koreche with info about the event
    // sei object with info take send korbe to me through/using the callback fn { function(event) - jeta ei eg unujai amader callback fn }
    // byash holo eitar concept
    
    
    
    
    
    
